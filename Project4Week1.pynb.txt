{"cells":[{"metadata":{},"cell_type":"markdown","source":"My plan for this week was to setup a program that could look at the average daily increase in the price of a stock given a certain company, and my plan is to buy stocks at the start of the day and sell them at the end based off of their Average daily sales. I don't know if this will work because I know very little about stocks, but it's the best idea I had for the first week. As for why I chose the sample of companies I did, it was based off of their maximum market cap.  "},{"metadata":{"trusted":true},"cell_type":"code","source":"!pip install datapackage\n!pip install pandas\n!pip install numpy\n!pip install yahoo-finance\n!pip install matplotlib","execution_count":3,"outputs":[{"output_type":"stream","text":"Requirement already satisfied: datapackage in /srv/conda/envs/notebook/lib/python3.6/site-packages (1.15.2)\nRequirement already satisfied: jsonpointer>=1.10 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (2.2)\nRequirement already satisfied: click>=6.7 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (8.0.3)\nRequirement already satisfied: requests>=2.8 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (2.26.0)\nRequirement already satisfied: tableschema>=1.12.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (1.20.2)\nRequirement already satisfied: six>=1.10 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (1.16.0)\nRequirement already satisfied: unicodecsv>=0.14 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (0.14.1)\nRequirement already satisfied: chardet>=3.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (4.0.0)\nRequirement already satisfied: tabulator>=1.29 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (1.53.5)\nRequirement already satisfied: jsonschema>=2.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from datapackage) (3.2.0)\nRequirement already satisfied: importlib-metadata in /srv/conda/envs/notebook/lib/python3.6/site-packages (from click>=6.7->datapackage) (4.6.3)\nRequirement already satisfied: setuptools in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema>=2.5->datapackage) (49.6.0.post20210108)\nRequirement already satisfied: pyrsistent>=0.14.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema>=2.5->datapackage) (0.17.3)\nRequirement already satisfied: attrs>=17.4.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from jsonschema>=2.5->datapackage) (21.2.0)\nRequirement already satisfied: urllib3<1.27,>=1.21.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from requests>=2.8->datapackage) (1.26.6)\nRequirement already satisfied: charset-normalizer~=2.0.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from requests>=2.8->datapackage) (2.0.0)\nRequirement already satisfied: certifi>=2017.4.17 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from requests>=2.8->datapackage) (2021.5.30)\nRequirement already satisfied: idna<4,>=2.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from requests>=2.8->datapackage) (3.1)\nRequirement already satisfied: cached-property>=1.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tableschema>=1.12.1->datapackage) (1.5.2)\nRequirement already satisfied: isodate>=0.5.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tableschema>=1.12.1->datapackage) (0.6.0)\nRequirement already satisfied: rfc3986>=1.1.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tableschema>=1.12.1->datapackage) (1.5.0)\nRequirement already satisfied: python-dateutil>=2.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tableschema>=1.12.1->datapackage) (2.8.2)\nRequirement already satisfied: linear-tsv>=1.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tabulator>=1.29->datapackage) (1.1.0)\nRequirement already satisfied: boto3>=1.9 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tabulator>=1.29->datapackage) (1.20.8)\nRequirement already satisfied: sqlalchemy>=0.9.6 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tabulator>=1.29->datapackage) (1.4.22)\nRequirement already satisfied: ijson>=3.0.3 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tabulator>=1.29->datapackage) (3.1.4)\nRequirement already satisfied: jsonlines>=1.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tabulator>=1.29->datapackage) (2.0.0)\nRequirement already satisfied: openpyxl>=2.6 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tabulator>=1.29->datapackage) (3.0.9)\nRequirement already satisfied: xlrd>=1.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from tabulator>=1.29->datapackage) (2.0.1)\nRequirement already satisfied: botocore<1.24.0,>=1.23.8 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from boto3>=1.9->tabulator>=1.29->datapackage) (1.23.9)\nRequirement already satisfied: jmespath<1.0.0,>=0.7.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from boto3>=1.9->tabulator>=1.29->datapackage) (0.10.0)\nRequirement already satisfied: s3transfer<0.6.0,>=0.5.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from boto3>=1.9->tabulator>=1.29->datapackage) (0.5.0)\nRequirement already satisfied: et-xmlfile in /srv/conda/envs/notebook/lib/python3.6/site-packages (from openpyxl>=2.6->tabulator>=1.29->datapackage) (1.1.0)\nRequirement already satisfied: greenlet!=0.4.17 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from sqlalchemy>=0.9.6->tabulator>=1.29->datapackage) (1.1.0)\nRequirement already satisfied: typing-extensions>=3.6.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from importlib-metadata->click>=6.7->datapackage) (3.10.0.0)\nRequirement already satisfied: zipp>=0.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from importlib-metadata->click>=6.7->datapackage) (3.5.0)\nRequirement already satisfied: pandas in /srv/conda/envs/notebook/lib/python3.6/site-packages (1.1.5)\nRequirement already satisfied: python-dateutil>=2.7.3 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from pandas) (2.8.2)\nRequirement already satisfied: pytz>=2017.2 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from pandas) (2021.1)\nRequirement already satisfied: numpy>=1.15.4 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from pandas) (1.19.5)\nRequirement already satisfied: six>=1.5 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from python-dateutil>=2.7.3->pandas) (1.16.0)\nRequirement already satisfied: numpy in /srv/conda/envs/notebook/lib/python3.6/site-packages (1.19.5)\nRequirement already satisfied: yahoo-finance in /srv/conda/envs/notebook/lib/python3.6/site-packages (1.4.0)\nRequirement already satisfied: pytz in /srv/conda/envs/notebook/lib/python3.6/site-packages (from yahoo-finance) (2021.1)\nRequirement already satisfied: simplejson in /srv/conda/envs/notebook/lib/python3.6/site-packages (from yahoo-finance) (3.17.6)\nRequirement already satisfied: matplotlib in /srv/conda/envs/notebook/lib/python3.6/site-packages (3.3.4)\nRequirement already satisfied: cycler>=0.10 in /srv/conda/envs/notebook/lib/python3.6/site-packages/cycler-0.10.0-py3.6.egg (from matplotlib) (0.10.0)\nRequirement already satisfied: kiwisolver>=1.0.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib) (1.3.1)\nRequirement already satisfied: pillow>=6.2.0 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib) (8.3.1)\nRequirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.3 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib) (2.4.7)\nRequirement already satisfied: python-dateutil>=2.1 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib) (2.8.2)\nRequirement already satisfied: numpy>=1.15 in /srv/conda/envs/notebook/lib/python3.6/site-packages (from matplotlib) (1.19.5)\nRequirement already satisfied: six in /srv/conda/envs/notebook/lib/python3.6/site-packages (from cycler>=0.10->matplotlib) (1.16.0)\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"import pandas as pd\nimport datetime\nimport numpy as np\nimport matplotlib.pyplot as plt\nfrom pandas.plotting import scatter_matrix\nimport yfinance as yf","execution_count":5,"outputs":[]},{"metadata":{"trusted":true},"cell_type":"code","source":"startDate = '2021-06-01'\nendDate = '2021-11-19'\n\nTesla = yf.download('TSLA',startDate,endDate)\nApple = yf.download('AAPL',startDate,endDate)\nMicrosoft = yf.download('MSFT',startDate,endDate)\nGoogle = yf.download('GOOG',startDate,endDate)\nAmazon = yf.download('AMZN',startDate,endDate)\nMeta = yf.download('FB',startDate,endDate)\nNvidia = yf.download('NVDA',startDate,endDate)\nTencent = yf.download('TCEHY',startDate,endDate)\nVisa = yf.download('V',startDate,endDate)\nHomeDepot = yf.download('HD',startDate,endDate)","execution_count":6,"outputs":[{"output_type":"stream","text":"[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n[*********************100%***********************]  1 of 1 completed\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"TeslaADG = (-1*np.mean(Tesla['Open']-Tesla['Close']),'Tesla')\nAppleADG = (-1*np.mean(Apple['Open']-Apple['Close']),'Apple')\nMicrosoftADG = (-1*np.mean(Microsoft['Open']-Microsoft['Close']),'Microsoft')\nGoogleADG = (-1*np.mean(Google['Open']-Google['Close']),'Google')\nAmazonADG = (-1*np.mean(Amazon['Open']-Amazon['Close']),'Amazon')\nMetaADG = (-1*np.mean(Meta['Open']-Meta['Close']),'Meta')\nNvidiaADG = (-1*np.mean(Nvidia['Open']-Nvidia['Close']),'Nvidia')\nTencentADG = (-1*np.mean(Tencent['Open']-Tencent['Close']),'Tencent')\nVisaADG = (-1*np.mean(Visa['Open']-Visa['Close']),'Visa')\nHomeDepotADG = (-1*np.mean(HomeDepot['Open']-HomeDepot['Close']),'HomeDepot')\n\nprint('Tesla:', TeslaADG)\nprint('Apple:', AppleADG)\nprint('Microsoft:', MicrosoftADG)\nprint('Google', GoogleADG)\nprint('Amazon:', AmazonADG)\nprint('Meta:', MetaADG)\nprint('Nvidia:', NvidiaADG)\nprint('Tencent:', TencentADG)\nprint('Visa:', VisaADG)\nprint('HomeDepot:', HomeDepotADG)","execution_count":27,"outputs":[{"output_type":"stream","text":"Tesla: (2.3103269466683884, 'Tesla')\nApple: (0.27966869764091556, 'Apple')\nMicrosoft: (0.49735594189856663, 'Microsoft')\nGoogle (2.84521484375, 'Google')\nAmazon: (4.50751186402376, 'Amazon')\nMeta: (0.1496698048489153, 'Meta')\nNvidia: (0.4713851045971074, 'Nvidia')\nTencent: (0.05148759952261428, 'Tencent')\nVisa: (-0.42082605283122415, 'Visa')\nHomeDepot: (0.43603212971332644, 'HomeDepot')\n","name":"stdout"}]},{"metadata":{"trusted":true},"cell_type":"code","source":"DailyAverageArray = ([TeslaADG,AppleADG,MicrosoftADG,GoogleADG,AmazonADG,MetaADG,NvidiaADG,TencentADG,VisaADG,HomeDepotADG])\nDailyAverageArray.sort()\nprint(DailyAverageArray)","execution_count":28,"outputs":[{"output_type":"stream","text":"[(-0.42082605283122415, 'Visa'), (0.05148759952261428, 'Tencent'), (0.1496698048489153, 'Meta'), (0.27966869764091556, 'Apple'), (0.43603212971332644, 'HomeDepot'), (0.4713851045971074, 'Nvidia'), (0.49735594189856663, 'Microsoft'), (2.3103269466683884, 'Tesla'), (2.84521484375, 'Google'), (4.50751186402376, 'Amazon')]\n","name":"stdout"}]},{"metadata":{},"cell_type":"markdown","source":"From the results above, it looks like the best choices for day to day sales on average are Amazon, Google, Tesla, and Microsoft of the companies I tested. For the next week I'd like to expand and automate the process more, and maybe find a way to make it more responsive to local trends"}],"metadata":{"kernelspec":{"name":"python3","display_name":"Python 3","language":"python"},"language_info":{"name":"python","version":"3.6.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"}},"nbformat":4,"nbformat_minor":5}